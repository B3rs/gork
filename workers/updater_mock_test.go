// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package workers is a generated GoMock package.
package workers

import (
	context "context"
	reflect "reflect"

	jobs "github.com/B3rs/gork/jobs"
	gomock "github.com/golang/mock/gomock"
)

// Mockupdater is a mock of updater interface.
type Mockupdater struct {
	ctrl     *gomock.Controller
	recorder *MockupdaterMockRecorder
}

// MockupdaterMockRecorder is the mock recorder for Mockupdater.
type MockupdaterMockRecorder struct {
	mock *Mockupdater
}

// NewMockupdater creates a new mock instance.
func NewMockupdater(ctrl *gomock.Controller) *Mockupdater {
	mock := &Mockupdater{ctrl: ctrl}
	mock.recorder = &MockupdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockupdater) EXPECT() *MockupdaterMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *Mockupdater) Update(arg0 context.Context, arg1 jobs.Job) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockupdaterMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*Mockupdater)(nil).Update), arg0, arg1)
}
